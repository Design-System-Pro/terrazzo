/**
 * Design Tokens
 * Autogenerated from tokens.json.
 * DO NOT EDIT!
 */

import {
  ColorToken,
  FontToken,
  DimensionToken,
  DurationToken,
  CubicBezierToken,
  LinkToken,
  StrokeStyleToken,
  BorderToken,
  TransitionToken,
  ShadowToken,
  GradientToken,
  TypographyToken,
} from '@cobalt-ui/core';

export declare const tokens: {
  'color.black': ColorToken['$value'];
  'color.blue.10': ColorToken['$value'];
  'color.blue.20': ColorToken['$value'];
  'color.blue.30': ColorToken['$value'];
  'color.blue.40': ColorToken['$value'];
  'color.blue.50': ColorToken['$value'];
  'color.blue.60': ColorToken['$value'];
  'color.blue.70': ColorToken['$value'];
  'color.blue.80': ColorToken['$value'];
  'color.blue.90': ColorToken['$value'];
  'color.blue.100': ColorToken['$value'];
  'color.blue.00': ColorToken['$value'];
  'color.white': ColorToken['$value'];
  'ui.fg': ColorToken['$value'];
  'ui.bg': ColorToken['$value'];
};

export declare const meta: {
  'color.black': ColorToken;
  'color.blue.10': ColorToken;
  'color.blue.20': ColorToken;
  'color.blue.30': ColorToken;
  'color.blue.40': ColorToken;
  'color.blue.50': ColorToken;
  'color.blue.60': ColorToken;
  'color.blue.70': ColorToken;
  'color.blue.80': ColorToken;
  'color.blue.90': ColorToken;
  'color.blue.100': ColorToken;
  'color.blue.00': ColorToken;
  'color.white': ColorToken;
  'ui.fg': ColorToken & { $extensions: { mode: typeof modes['ui.fg'] } };
  'ui.bg': ColorToken & { $extensions: { mode: typeof modes['ui.bg'] } };
};

export declare const modes: {
  'ui.fg': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
  'ui.bg': {
    light: ColorToken['$value'];
    dark: ColorToken['$value'];
  };
};

export declare function token(tokenID: keyof typeof tokens, modeName?: undefined): typeof tokens[typeof tokenID];
export declare function token(tokenID: keyof typeof modes, modeName?: keyof typeof modes[typeof tokenID]): typeof modes[typeof tokenID];
