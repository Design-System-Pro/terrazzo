import { build, defineConfig, parse } from '@terrazzo/parser';
import { makeCSSVar } from '@terrazzo/token-tools/css';
import { describe, expect, test } from 'vitest';
import fs from 'node:fs';
import { fileURLToPath } from 'node:url';
import css from '../src/index.js';

describe('@terrazzo/plugin-css', () => {
  test.each(['border', 'color', 'dimension', 'shadow', 'typography', 'transition'])('%s', async (dir) => {
    const cwd = new URL(`./${dir}/`, import.meta.url);
    const config = defineConfig(
      {
        plugins: [
          css({
            filename: 'actual.css',
            variableName: (name) => makeCSSVar(name, { prefix: 'ds' }),
            modeSelectors: [
              {
                mode: 'light',
                tokens: ['color.*'],
                selectors: ['@media (prefers-color-scheme: light)', '[data-color-theme="light"]'],
              },
              {
                mode: 'dark',
                tokens: ['color.*'],
                selectors: ['@media (prefers-color-scheme: dark)', '[data-color-theme="dark"]'],
              },
              { mode: 'light-colorblind', tokens: ['color.*'], selectors: ['[data-color-theme="light-colorblind"]'] },
              {
                mode: 'light-high-contrast',
                tokens: ['color.*'],
                selectors: ['[data-color-theme="light-high-contrast"]'],
              },
              { mode: 'dark-dimmed', tokens: ['color.*'], selectors: ['[data-color-theme="dark-dimmed"]'] },
              {
                mode: 'dark-high-contrast',
                tokens: ['color.*'],
                selectors: ['[data-color-theme="dark-high-contrast"]'],
              },
              { mode: 'dark-colorblind', tokens: ['color.*'], selectors: ['[data-color-theme="dark-colorblind"]'] },
              { mode: 'desktop', selectors: ['@media (width >= 600px)'] },
            ],
          }),
        ],
      },
      { cwd },
    );
    const { tokens, ast } = await parse(fs.readFileSync(new URL('./tokens.json', cwd), 'utf8'), { config });
    const result = await build(tokens, { ast, config });
    expect(result.outputFiles[0]?.contents).toMatchFileSnapshot(fileURLToPath(new URL('./want.css', cwd)));
  });

  describe('Additional tests', () => {
    test('Colors automatically clamped to sRGB / P3 gamuts', async () => {
      const cwd = new URL(import.meta.url);
      const config = defineConfig(
        {
          plugins: [
            css({
              modeSelectors: [
                { mode: 'light', selectors: ['@media (prefers-color-scheme: light)', '[data-color-theme="light"]'] },
                { mode: 'dark', selectors: ['@media (prefers-color-scheme: dark)', '[data-color-theme="dark"]'] },
                { mode: 'light-colorblind', selectors: ['[data-color-theme="light-colorblind"]'] },
                { mode: 'light-high-contrast', selectors: ['[data-color-theme="light-high-contrast"]'] },
                { mode: 'dark-dimmed', selectors: ['[data-color-theme="dark-dimmed"]'] },
                { mode: 'dark-high-contrast', selectors: ['[data-color-theme="dark-high-contrast"]'] },
                { mode: 'dark-colorblind', selectors: ['[data-color-theme="dark-colorblind"]'] },
              ],
            }),
          ],
        },
        { cwd },
      );
      const { tokens, ast } = await parse(
        {
          color: {
            $type: 'color',
            blue: {
              $value: { colorSpace: 'oklch', channels: [0.6412, 0.239, 254.98] },
              $extensions: {
                mode: {
                  light: { colorSpace: 'oklch', channels: [0.6412, 0.239, 254.98] },
                  'light-colorblind': { colorSpace: 'oklch', channels: [0.6412, 0.239, 254.98] },
                  'light-high-contrast': { colorSpace: 'oklch', channels: [0.5441, 0.274, 259.2] },
                  dark: { colorSpace: 'oklch', channels: [0.6471, 0.242, 257.45] },
                  'dark-dimmed': { colorSpace: 'oklch', channels: [0.6177, 0.161, 257.75] },
                  'dark-high-contrast': { colorSpace: 'oklch', channels: [0.6971, 0.183, 252.17790084227943] },
                  'dark-colorblind': { colorSpace: 'oklch', channels: [0.6471, 0.242, 257.45] },
                },
              },
            },
          },
        },
        { config },
      );
      const result = await build(tokens, { ast, config });
      expect(result.outputFiles[0]?.contents).toMatchInlineSnapshot(`
      "/* -------------------------------------------
       *  Autogenerated by ðŸ’  Terrazzo. DO NOT EDIT!
       * ------------------------------------------- */

      :root {
        --color-blue: oklch(0.6412 0.239 254.98);
      }

      @media (color-gamut: srgb) {
        :root {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (color-gamut: p3) {
        :root {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (prefers-color-scheme: light) {
        :root {
          --color-blue: oklch(0.6412 0.239 254.98);
        }

        @media (color-gamut: srgb) {
          --color-blue: oklch(0.6412 0.239 254.98);
        }

        @media (color-gamut: p3) {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      [data-color-theme="light"] {
        --color-blue: oklch(0.6412 0.239 254.98);
      }

      @media (color-gamut: srgb) {
        [data-color-theme="light"] {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (color-gamut: p3) {
        [data-color-theme="light"] {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (prefers-color-scheme: dark) {
        :root {
          --color-blue: oklch(0.6471 0.242 257.45);
        }

        @media (color-gamut: srgb) {
          --color-blue: oklch(0.6412 0.239 254.98);
        }

        @media (color-gamut: p3) {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      [data-color-theme="dark"] {
        --color-blue: oklch(0.6471 0.242 257.45);
      }

      @media (color-gamut: srgb) {
        [data-color-theme="dark"] {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (color-gamut: p3) {
        [data-color-theme="dark"] {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      [data-color-theme="light-colorblind"] {
        --color-blue: oklch(0.6412 0.239 254.98);


      @media (color-gamut: srgb) {
        [data-color-theme="light-high-contrast"]
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (color-gamut: p3) {
        [data-color-theme="light-high-contrast"]
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      [data-color-theme="light-high-contrast"] {
        --color-blue: oklch(0.5441 0.274 259.2);
      }

      @media (color-gamut: srgb) {
        [data-color-theme="light-high-contrast"]
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (color-gamut: p3) {
        [data-color-theme="light-high-contrast"]
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      [data-color-theme="dark-dimmed"] {
        --color-blue: oklch(0.6177 0.161 257.75);
      }

      @media (color-gamut: srgb) {
        [data-color-theme="dark-dimmed"]
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (color-gamut: p3) {
        [data-color-theme="dark-dimmed"]
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      [data-color-theme="dark-high-contrast"] {
        --color-blue: oklch(0.6971 0.183 252.17790084227943);
      }

      @media (color-gamut: srgb) {
        [data-color-theme="dark-high-contrast"]
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (color-gamut: p3) {
        [data-color-theme="dark-high-contrast"]
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      [data-color-theme="dark-colorblind"] {
        --color-blue: oklch(0.6471 0.242 257.45);
      }

      @media (color-gamut: srgb) {
        [data-color-theme="dark-colorblind"] {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }

      @media (color-gamut: p3) {
        [data-color-theme="dark-colorblind"] {
          --color-blue: oklch(0.6412 0.239 254.98);
        }
      }"
    `);
    });
  });
});
