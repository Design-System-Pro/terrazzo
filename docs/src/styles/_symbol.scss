@use 'sass:math';
@use '../../tokens' as *;

.symbol {
  display: block;
  position: absolute;
  height: token('space.2xl');
  right: calc(100% + #{token('space.md')});
  top: 50%;
  transform: translateY(-50%);
  width: token('space.2xl');

  &-bg {
    height: 100%;
    fill: none;
    left: 50%;
    position: absolute;
    stroke: currentColor;
    stroke-width: 5;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    z-index: 1;
  }

  &-fg {
    align-items: center;
    display: flex;
    justify-content: center;
    left: 50%;
    position: absolute;
    stroke-width: 0;
    top: 50%;
    transform: translate(-50%, -50%);
    width: token('space.2xl') - 12px;
    z-index: 2;
  }

  &--color,
  &--gradient {
    .symbol-bg {
      animation: kaleidoscope linear infinite 15s;
      fill: none !important;
    }

    .symbol-fg {
      animation: kaleidoscope linear infinite 15s;
    }
  }

  &--font,
  &--typography {
    .symbol-fg {
      font-size: 19px;
      font-weight: 600;
      letter-spacing: -0.0125em;
    }
  }

  &--dimension {
    .symbol-fg {
      animation: piston token('easing.easeOutCubic') infinite 2s;
      background: token('color.black');
      height: 2px;
      width: token('space.md');

      &::before,
      &::after {
        background: token('color.black');
        content: '';
        display: block;
        position: absolute;
        transform: rotate(90deg);
        left: -6px;
        height: 2px;
        width: 12px;
      }

      &::after {
        left: auto;
        right: -6px;
      }
    }
  }

  &--duration {
    $l: 0.75 * token('space.md'); // hex is space.md; base it off that but take away a little

    .symbol-fg {
      animation: tickTock token('easing.easeOutCubic') infinite 4s;
      background-color: token('color.black');
      transform-origin: 50% 100%;
      top: calc(50% - #{$l});
      left: calc(50% - 1px);
      height: $l;
      width: 2px;
    }
  }

  // TODO
  &--cubic-bezier,
  &--link,
  &--stroke-style,
  &--border,
  &--transition,
  &--shadow {
    .symbol-fg {
      background-color: token('color.black');
      border-radius: 50%;
      height: token('space.xs');
      width: token('space.xs');
    }
  }
}

// lch: lightness 65%, chroma 100%
@keyframes kaleidoscope {
  0%,
  100% {
    fill: rgb(100% 40.23% 63.07%);
    stroke: rgb(100% 40.23% 63.07%);
  }
  8.3333% {
    fill: rgb(100% 42.75% 40.59%);
    stroke: rgb(100% 42.75% 40.59%);
  }
  16.6666% {
    fill: rgb(94.33% 48.8% 0%);
    stroke: rgb(94.33% 48.8% 0%);
  }
  25% {
    fill: rgb(70.79% 61.17% 0%);
    stroke: rgb(70.79% 61.17% 0%);
  }
  33.3333% {
    fill: rgb(43.78% 68.36% 0%);
    stroke: rgb(43.78% 68.36% 0%);
  }
  41.6666% {
    fill: rgb(0% 71.18% 37.75%);
    stroke: rgb(0% 71.18% 37.75%);
  }
  50% {
    fill: rgb(0% 69.92% 61.19%);
    stroke: rgb(0% 69.92% 61.19%);
  }
  58.3333% {
    fill: rgb(0% 68.75% 75.24%);
    stroke: rgb(0% 68.75% 75.24%);
  }
  66.6666% {
    fill: rgb(0% 67.23% 89.25%);
    stroke: rgb(0% 67.23% 89.25%);
  }
  75% {
    fill: rgb(36.59% 63.12% 100%);
    stroke: rgb(36.59% 63.12% 100%);
  }
  83.3333% {
    fill: rgb(67.39% 54.94% 100%);
    stroke: rgb(67.39% 54.94% 100%);
  }
  91.6666% {
    fill: rgb(100% 33.43% 93.85%);
    stroke: rgb(100% 33.43% 93.85%);
  }
}

@keyframes piston {
  0%,
  40%,
  100% {
    width: 0;
  }

  50%,
  90% {
    width: 18px;
  }
}

@keyframes tickTock {
  0%,
  20% {
    transform: rotate(0deg);
  }
  25%,
  45% {
    transform: rotate(90deg);
  }
  50%,
  70% {
    transform: rotate(180deg);
  }
  75%,
  95% {
    transform: rotate(270deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
