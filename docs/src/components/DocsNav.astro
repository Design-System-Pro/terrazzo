---
import manifest from '../docs-manifest.json';

const subPageRE = /^\/docs\/[^/]+\//;
const docsSection = Astro.url.pathname.split('/').slice(0, 3).join('/');

function showSubPage(url) {
  if (subPageRE.test(url)) {
    if (Astro.url.pathname === '/') return false;
    return docsSection && url.startsWith(docsSection);
  }
  return true;
}
---

<style lang="scss">
  @use '../../tokens' as *;

  .nav {
    border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    display: flex;
    flex-direction: column;
    font-size: token('font.size.04');
    height: max-content;
    margin-bottom: token('space.md');
    max-height: calc(100vh - #{token('space.layout.sm')});
    min-width: var(--nav-width);
    padding-bottom: token('space.md');

    @media (min-width: 600px) {
      border-bottom: none;
      margin-bottom: 0;
      margin-left: auto;
      padding-left: token('space.lg');
      padding-bottom: 0;
      padding-left: token('space.md');
      position: sticky;
      top: token('space.md');
    }
  }

  .a {
    align-items: center;
    border-left: 1px solid token('color.ui.contrast.10');
    color: token('color.ui.contrast.70');
    display: flex;
    min-height: token('space.xl');
    padding-left: token('space.sm');
    position: relative;
    text-decoration: none;

    &:hover {
      border-left-color: token('color.ui.contrast.50');
      color: token('color.ui.contrast.80');
    }

    &[aria-current='page'] {
      background-color: color-mix(in oklab, #{token('color.ui.action')}, transparent 90%);
      border-color: token('color.ui.action');
      color: token('color.ui.action');
      font-weight: 550;
    }

    &-icon {
      margin-left: auto;
      height: 1em;
      width: 1em;
    }

    &--subpage {
      padding-left: token('space.lg');
      min-height: token('space.lg');

      &[aria-current='page'] {
        background: none;
      }

      &::before {
        left: -0.875rem;
      }
    }
  }

  body.top-blue {
    .a {
      color: token('color.white');
    }
  }
</style>

<nav class="nav">
  {
    manifest.pages.map(
      (page) =>
        (showSubPage(page.pathname) && (
          <a class={`a${subPageRE.test(page.pathname) ? ' a--subpage' : ''}`} href={page.pathname} aria-current={Astro.url.pathname.startsWith(page.pathname) ? 'page' : undefined}>
            {page.title}
          </a>
        )) ||
        undefined,
    )
  }
</nav>
